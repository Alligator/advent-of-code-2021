file: read('day11.txt')
test: '5483143223
2745854711
5264556173
6141336146
6357385478
4167524645
2176841721
6882881134
4846848554
5283751526'
test_part1: 1656
test_part2: 195

fn print_octos(octos) {
  for row in octos {
    for oct in row {
      print(oct)
    }
    println()
  }
}

part1: {
  var nrg = []
  for line in lines {
    var row = []
    for c in split(line, '') {
      row = push(row, num(c))
    }
    nrg = push(nrg, row)
  }

  var w = len(nrg[0])
  var h = len(nrg)

  fn step() {
    # increase energy level by 1 and find first flashes
    var flash_count = 0
    var flashes = []
    for y in range(0, h) {
      for x in range(0, w) {
        nrg[y][x] = nrg[y][x] + 1
        if nrg[y][x] > 9 {
          flashes = push(flashes, [x, y])
        }
      }
    }


    # flashes
    var flashed = {}
    fn has_flashed(x, y) {
      return flashed[y * w + x] == 1
    }

    fn flash(x, y) {
      if has_flashed(x, y) {
        return 0
      }
      flashed[y * w + x] = 1
      flash_count = flash_count + 1

      nrg[y][x] = 0

      for offsety in rangei(-1, 1) {
        for offsetx in rangei(-1, 1) {
          var flashx = x + offsetx
          var flashy = y + offsety

          if flashx < 0 || flashy < 0
          || flashx >= w || flashy >= h
          || (offsetx == 0 && offsety == 0) {
            continue
          }

          if has_flashed(flashx, flashy) == 0 {
            nrg[flashy][flashx] = nrg[flashy][flashx] + 1
            if nrg[flashy][flashx] > 9 {
              flash(flashx, flashy)
            }
          }

        }
      }

    }

    for {
      if len(flashes) == 0 {
        break
      }

      for f in flashes {
        var flashx = f[0]
        var flashy = f[1]
        flash(flashx, flashy)
      }

      break
    }

    # println()
    # print_octos(nrg)
    return flash_count
  }

  var total_flashes = 0
  for i in range(0, 100) {
    # println(i)
    total_flashes = total_flashes + step()
  }

  return total_flashes
}

part2: {
  var nrg = []
  for line in lines {
    var row = []
    for c in split(line, '') {
      row = push(row, num(c))
    }
    nrg = push(nrg, row)
  }

  var w = len(nrg[0])
  var h = len(nrg)

  fn step() {
    # increase energy level by 1 and find first flashes
    var flash_count = 0
    var flashes = []
    for y in range(0, h) {
      for x in range(0, w) {
        nrg[y][x] = nrg[y][x] + 1
        if nrg[y][x] > 9 {
          flashes = push(flashes, [x, y])
        }
      }
    }


    # flashes
    var flashed = {}
    fn has_flashed(x, y) {
      return flashed[y * w + x] == 1
    }

    fn flash(x, y) {
      if has_flashed(x, y) {
        return 0
      }
      flashed[y * w + x] = 1
      flash_count = flash_count + 1

      nrg[y][x] = 0

      for offsety in rangei(-1, 1) {
        for offsetx in rangei(-1, 1) {
          var flashx = x + offsetx
          var flashy = y + offsety

          if flashx < 0 || flashy < 0
          || flashx >= w || flashy >= h
          || (offsetx == 0 && offsety == 0) {
            continue
          }

          if has_flashed(flashx, flashy) == 0 {
            nrg[flashy][flashx] = nrg[flashy][flashx] + 1
            if nrg[flashy][flashx] > 9 {
              flash(flashx, flashy)
            }
          }

        }
      }

    }

    for {
      if len(flashes) == 0 {
        break
      }

      for f in flashes {
        var flashx = f[0]
        var flashy = f[1]
        flash(flashx, flashy)
      }

      break
    }

    # println()
    # print_octos(nrg)
    return flash_count
  }

  var i = 1
  for {
    var flashes = step()
    if flashes == w * h {
      break
    }
    i = i + 1
  }

  return i
}
