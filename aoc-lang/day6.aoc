file: read('day6.txt')

test: '3,4,3,1,2'

test_part1: 5934
test_part2: 26984457539

fn run(fish, end) {
  # notes
  #
  # i don't need to store all the fish, just how many are created on each day
  # of the cycle
  #
  # there are two cycles, 7 day and 9 day.
  #
  # when a 7 cycle is due, add them to the 9 day (new fish)
  # when a 9 cycle is due, add them to the 7 day (9 cycle fish becomes 7 cycle)

  var c7 = [0, 0, 0, 0, 0, 0, 0, 0, 0]
  var c9 = [0, 0, 0, 0, 0, 0, 0, 0, 0]
  var total = 0

  for f in split(fish, ',') {
    var i = num(f) + 1
    c7[i] = c7[i] + 1
    total = total + 1
  }

  for i in rangei(0, end) {
    var i7 = i % 7
    var i9 = i % 9

    var c7count = c7[i7]
    var c9count = c9[i9]

    # println('day', i)
    if c9count > 0 {
      # println('  9 cycles up:', c9count)
      c7[i7] = c7[i7] + c9count
      total = total + c9count
    }

    if c7count > 0 {
      # println('  7 cycles up:', c7count)
      c9[i9] = c9[i9] + c7count
      total = total + c7count
    }
    # println('  total', total)
  }

  return total
}

old_part1: {
  var fish = []
  for f in split(lines[0], ',') {
    fish = push(fish, num(f))
  }

  var new_fish = 0

  for i in range(0, 80) {
    for f, index in fish {
      var next = f - 1
      if f == 0 {
        next = 6
        new_fish = new_fish + 1
      }
      fish[index] = next
    }

    for nf in range(0, new_fish) {
      fish = push(fish, 8)
    }
    new_fish = 0
  }

  return len(fish)
}

part1: { return run(lines[0], 80) }
part2: { return run(lines[0], 256) }
